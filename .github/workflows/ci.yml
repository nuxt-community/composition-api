name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: cache
        with:
          path: "node_modules"
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Lint project
        run: yarn lint

  e2e:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        test:
          - e2e-generated
          - e2e-globals
          - e2e-ssr
    runs-on: "${{ matrix.os }}"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: cache
        with:
          path: "node_modules"
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build project
        run: yarn build

      - name: Test project
        run: yarn test:${{ matrix.test }}
        env:
          TEST_BUILT_MODULE: true

  unit:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    runs-on: "${{ matrix.os }}"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: cache
        with:
          path: "node_modules"
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build project
        run: yarn build

      - name: Test types
        run: yarn test:types

      - name: Unit tests
        run: yarn test:unit
